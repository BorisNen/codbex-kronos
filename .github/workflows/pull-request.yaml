name: Pull Request

on:
  pull_request:
    branches: [ main, lkg ]

jobs:
  
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download sapmachine JDK 17
        run: |
          download_url="https://github.com/SAP/SapMachine/releases/download/sapmachine-17.0.2/sapmachine-jdk-17.0.2_linux-x64_bin.tar.gz"
          wget -O "${RUNNER_TEMP}/sapmachine-jdk-17.tar.gz" "${download_url}"

      - name: Setup sapmachine JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'jdkfile'
          jdkFile: ${{ runner.temp }}/sapmachine-jdk-17.tar.gz
          java-version: '17.0.2'
          architecture: x64
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        if: ${{ env.SONAR_TOKEN != '' }}
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Maven Build and Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          [ "$SONAR_TOKEN" ] && SONAR_ARG="-B sonar:sonar -Dsonar.projectKey=codbex_codbex-kronos"
          mvn clean install $SONAR_ARG
      - name: Docker Build Kronos
        run: |
          cd releng/server
          cp -r "${JAVA_HOME}" jdk
          docker build -t ghcr.io/codbex/kronos --build-arg JDK_TYPE=external-jdk --build-arg JDK_HOME=jdk .
          cd ../../
      - name: Docker Build Kronos for SAP Cloud Foundry
        run: |
          cd releng/sap-cf
          cp -r "${JAVA_HOME}" jdk
          docker build -t ghcr.io/codbex/kronos-cf --build-arg JDK_TYPE=external-jdk --build-arg JDK_HOME=jdk .
          cd ../../
      - name: Docker Build Kronos for SAP Kyma
        run: |
          cd releng/sap-kyma
          cp -r "${JAVA_HOME}" jdk
          docker build -t ghcr.io/codbex/kronos-kyma --build-arg JDK_TYPE=external-jdk --build-arg JDK_HOME=jdk .
          cd ../../
      - name: Push Kronos for SAP Kyma Runtime
        run: |
          cd releng/sap-kyma-runtime
          docker build -t ghcr.io/codbex/kronos-kyma-runtime-base -f Dockerfile-base .
          docker build -t ghcr.io/codbex/kronos-kyma-runtime .
          docker build -t ghcr.io/codbex/kronos-kyma-runtime-distro -f Dockerfile-distro .
          cd ../../
